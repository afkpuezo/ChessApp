<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <!-- Enable annotations in Spring MVC specifically... -->
	<mvc:annotation-driven />

	<!-- Enable Static resource locator with /* mapping -->
	<mvc:resources mapping="/static/**" location="/static/" />

	<!-- Enable @Transactional -->

	<tx:annotation-driven />

    <!--  Package Scan -->
    <context:component-scan base-package="com.revature.repository" />
    <context:component-scan base-package="com.revature.service" />
    <context:component-scan base-package="com.revature.view" />
	<context:component-scan base-package="com.revature.rest.impl" />
    <context:component-scan base-package="com.revature.experiment" />
    <context:component-scan base-package="com.revature.repo_test" />

    <!--  Hibernate Integration with Contextual Sessions -->



    <!-- DataSource Configuration here (JDBC) -->
    <bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!-- If you want to use Environment variables, use the example below -->
        <!--<property name="url" value ="#{systemEnvironment['ENV NAME']}">-->

        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://project-1.ctbiymuawd1y.us-east-2.rds.amazonaws.com:5432/postgres"/>
        <property name="username" value="postgres" />
        <property name="password" value="revature" />
    </bean>

    <!-- SessionFactory Configuration (Hibernate) -->
    <bean name="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!--  Manually Inject Datasource ^ -->
        <property name="dataSource" ref="dataSource"/>

        <!--  Annotation Mapping -->
        <property name="packagesToScan" value="com.revature.model"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.default_schema">chess_test</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.generate_statistics">false</prop>
                <prop key="hibernate.use_sql_comments">false</prop>
            </props>
        </property>

    </bean>

    <!-- bean TransactionManager (this is a bean!) (Hibernate) -->
    <bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <!-- This makes all sessions a transaction -->
        <!-- property Manually inject SessionFactory -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
</beans>